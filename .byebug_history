continue
id_or_name
id.present? && id_or_name.zero?
id_or_name
continue
123.zero
123.zero?
123.number?
"asdasdasdasasdasd".to_i
"asdasdasdasd".to_i
"asdasd".to_i
id.to_i
id
continue
pokemon_params[:id]
continue
pokemon_params[:id]
pokemon_params
continue
Serializers::PokemonSerializer
Serializers
Serializers::PokemonSerializer
continu
::PokemonSerializer
PokemonSerializer
continue
exit
continue
poke_api_type
continue
errors
next
pokemon_data = PokeApi.get(:pokemon).results
continue
    end
      end
        puts "Pokemon did not created with #{_.name} errors: #{pokemon.errors}"
      else
        puts 'pokemon saved successfully'
      if pokemon.save!
      pokemon.weight = result.weight
      pokemon.height = result.height
      pokemon = Pokemon.find_or_initialize_by(name: result.name)
      result = PokeApi.get(name: _.name)
pokemon_data.each do |_|
pokemon_data = PokeApi.get(:pokemon).results
continue
PokeApi.get(:pokemon).results
continue
pokemons.results.first.url
pokemons.results.first.name
pokemons.results.first.id
pokemons.results.first
pokemons.results
pokemons = PokeApi.get(:pokemon)
_.results
_.first
pokemons = PokeApi.get(:pokemon)
pokemon = PokeApi.get(:pokemon).first
pokemon = PokeApi.get(:pokemon)
pokemon = PokeApi.get(pokemon:)
pokemon = PokeApi.get(:pokemon).count
pokemon = PokeApi.get(:pokemon)
pokemon = PokeApi.pokedex.first
pokemon = PokeApi.pokedex.results
pokemon = PokeApi.pokedex
pokemon = PokeApi.methods
pokemon = PokeApi.class
pokemon = PokeApi
pokemon = PokeApi.get
pokemon
pokemon = PokeApi.get()
pokemon = PokeApi.list(limit: 10)
pokemon = PokeApi.get(pokemon: 'sdas')
pokemon = PokeApi.get(name: "asd")
pokemon = PokeApi.get(name: "")
pokemon = PokeApi.get.methods
pokemon = PokeApi.get.method
pokemon = PokeApi.all
pokemon = PokeApi.g
pokemon.types
pokemon.types.first.type.name
pokemon.types.first.type.electric
pokemon.types.first.type
pokemon = PokeApi.get(pokemon: 'pikachu')
pokemon.types.first.type.name
pokemon.types.first.type
pokemon.types
pokemon.type
pokemon.entities
pokemon.id
pokemon.name
pokemon = PokeApi.get(pokemon: 'bulbasaur')
continue
PokeApi.get(pokemon: 'bulbasaur').results.class
PokeApi.get(pokemon: 'bulbasaur').results
PokeApi.get(pokemon: 'bulbasaur').class
PokeApi.get(pokemon: 'bulbasaur').pretty_print
PokeApi.get(pokemon: 'bulbasaur').methods
PokeApi.get(pokemon: 'bulbasaur').body
PokeApi.get(pokemon: 'bulbasaur').response
PokeApi.get(pokemon: 'bulbasaur').class
PokeApi.get(pokemon: 'bulbasaur') 
